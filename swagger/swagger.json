{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger Json",
    "description": "This is a generated swagger json for your sails project",
    "termsOfService": "http://example.com/terms",
    "contact": {
      "name": "Theophilus Omoregbee",
      "url": "http://github.com/theo4u",
      "email": "theo4u@ymail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:1337/"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "Definition",
      "description": "Sails blueprint actions for the **Definition** model"
    },
    {
      "name": "Dictionary",
      "description": "Sails blueprint actions for the **Dictionary** model"
    },
    {
      "name": "Page",
      "description": "Sails blueprint actions for the **Page** model"
    },
    {
      "name": "Path",
      "description": "Sails blueprint actions for the **Path** model"
    },
    {
      "name": "Team",
      "description": "Sails blueprint actions for the **Team** model"
    },
    {
      "name": "User",
      "description": "Sails blueprint actions for the **User** model"
    },
    {
      "name": "Index"
    },
    {
      "name": "Create"
    },
    {
      "name": "Detail"
    },
    {
      "name": "Revoke"
    },
    {
      "name": "Sync"
    },
    {
      "name": "Find"
    },
    {
      "name": "Import"
    },
    {
      "name": "Metadata"
    },
    {
      "name": "Export"
    }
  ],
  "components": {
    "schemas": {
      "definition": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/definition-without-required-constraint"
          },
          {
            "required": [
              "name",
              "teamId"
            ]
          }
        ]
      },
      "definition-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Definition**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": "object",
            "example": "object"
          },
          "properties": {},
          "metadata": {},
          "teamId": {
            "type": "string"
          }
        }
      },
      "dictionary": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/dictionary-without-required-constraint"
          },
          {
            "required": [
              "property"
            ]
          }
        ]
      },
      "dictionary-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Dictionary**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "property": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "page": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/page-without-required-constraint"
          },
          {
            "required": [
              "identifier",
              "teamId"
            ]
          }
        ]
      },
      "page-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Page**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "title": {
            "type": "string"
          },
          "hideTitle": {
            "type": "boolean",
            "default": false
          },
          "identifier": {
            "type": "string"
          },
          "teamId": {
            "type": "string"
          },
          "addButton": {
            "type": "boolean",
            "default": false
          },
          "addLink": {
            "type": "string"
          },
          "pathOption": {
            "type": "string"
          },
          "backButton": {
            "type": "boolean",
            "default": false
          },
          "component": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "serviceUrl": {},
          "isRedirect": {
            "type": "boolean",
            "default": false
          },
          "redirectOption": {
            "type": "string"
          },
          "redirectLink": {
            "type": "string"
          },
          "hideSubmitButton": {
            "type": "boolean",
            "default": false
          },
          "listBtn": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "onInit": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "customToastrMsg": {
            "type": "string"
          }
        }
      },
      "path": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/path-without-required-constraint"
          },
          {
            "required": [
              "path",
              "environment",
              "parameter",
              "teamId"
            ]
          }
        ]
      },
      "path-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Path**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "path": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "parameter": {},
          "teamId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "team": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/team-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "team-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Team**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "uniqueItems": true
          },
          "description": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/user-without-required-constraint"
          },
          {
            "required": [
              "fullName",
              "email",
              "password"
            ]
          }
        ]
      },
      "user-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **User**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "emailStatus": {
            "type": "string",
            "default": "unconfirmed",
            "enum": [
              "unconfirmed",
              "confirmed"
            ],
            "example": "unconfirmed"
          },
          "emailProofToken": {
            "type": "string",
            "description": "This will be used in the account verification email"
          },
          "emailProofTokenExpiresAt": {
            "type": "number",
            "format": "double",
            "description": "time in milliseconds representing when the emailProofToken will expire"
          },
          "password": {
            "type": "string"
          },
          "passwordResetToken": {
            "type": "string",
            "description": "A unique token used to verify the user's identity when recovering a password."
          },
          "passwordResetTokenExpiresAt": {
            "type": "number",
            "format": "double",
            "description": "A timestamp representing the moment when this user's `passwordResetToken` will expire (or 0 if the user currently has no such token).",
            "example": 1508944074211
          }
        }
      }
    },
    "parameters": {
      "ModelPKParam-definition": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **Definition** record's primary key value"
      },
      "ModelPKParam-dictionary": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **Dictionary** record's primary key value"
      },
      "ModelPKParam-page": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **Page** record's primary key value"
      },
      "ModelPKParam-path": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **Path** record's primary key value"
      },
      "ModelPKParam-team": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **Team** record's primary key value"
      },
      "ModelPKParam-user": {
        "in": "path",
        "name": "_id",
        "required": true,
        "schema": {
          "type": "string",
          "uniqueItems": true
        },
        "description": "The desired **User** record's primary key value"
      },
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Register",
        "description": "Register user.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fullName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 6
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "201": {
            "description": "New user created"
          },
          "400": {
            "description": "Email address already in use"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Oops, something went wrong"
          }
        }
      }
    },
    "/user/confirm": {
      "get": {
        "summary": "Confirm",
        "description": "Confirm user.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": false,
            "schema": {
              "type": "string",
              "example": "4-32fad81jdaf$329"
            },
            "description": "The confirmation token from the email."
          }
        ],
        "responses": {
          "200": {
            "description": "Email address confirmed and requesting user logged in."
          },
          "400": {
            "description": "The provided token is expired, invalid, or already used up."
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login",
        "description": "Login user.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 6
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated user credential"
          },
          "401": {
            "description": "You have entered an invalid password"
          },
          "404": {
            "description": "Instance object not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/dictionary": {
      "get": {
        "summary": "Index",
        "description": "Index dictionary.",
        "tags": [
          "Dictionary"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/mock": {
      "post": {
        "summary": "Index",
        "description": "Index mock.",
        "tags": [
          "Index"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "req",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Index",
        "description": "Index mock.",
        "tags": [
          "Index"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "req",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/pages/create": {
      "post": {
        "summary": "Create",
        "description": "Create pages.",
        "tags": [
          "Create"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "hideTitle",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "addButton",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "addLink",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pathOption",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "backButton",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "component",
            "required": false,
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "serviceUrl",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isRedirect",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "redirectOption",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "redirectLink",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "hideSubmitButton",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "listBtn",
            "required": false,
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "onInit",
            "required": false,
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "customToastrMsg",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/pages/detail": {
      "post": {
        "summary": "Detail",
        "description": "Detail pages.",
        "tags": [
          "Detail"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Page was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/profile": {
      "post": {
        "summary": "Profile",
        "description": "Get Detail Profile user.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Instance object not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/teams/create": {
      "post": {
        "summary": "Create",
        "description": "Create teams.",
        "tags": [
          "Create"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Team name already in use"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/teams/detail": {
      "post": {
        "summary": "Detail",
        "description": "Detail teams.",
        "tags": [
          "Detail"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "teamId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/token/revoke": {
      "post": {
        "summary": "Revoke",
        "description": "Revoke token.",
        "tags": [
          "Revoke"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Team not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/dictionary/create": {
      "post": {
        "summary": "Create",
        "description": "Create dictionary.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Dictionary** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Dictionary instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dictionary"
              }
            }
          }
        }
      }
    },
    "/api/v1/dictionary/create-many": {
      "post": {
        "summary": "Create many",
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "data",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/paths/sync": {
      "post": {
        "summary": "Sync",
        "description": "Sync paths.",
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "req",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/paths/find": {
      "post": {
        "summary": "Find",
        "description": "Find paths.",
        "tags": [
          "Find"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "req",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Path not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/definitions/sync": {
      "post": {
        "summary": "Import",
        "description": "Import definitions.",
        "tags": [
          "Import"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "req",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/definitions/find": {
      "post": {
        "summary": "Find",
        "description": "Find definitions.",
        "tags": [
          "Find"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "req",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/definitions/metadata": {
      "post": {
        "summary": "Metadata",
        "description": "Metadata definitions.",
        "tags": [
          "Metadata"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "req",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/pages/export": {
      "get": {
        "summary": "Export",
        "description": "Export pages.",
        "tags": [
          "Export"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "json",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Index",
        "description": "Index home.",
        "tags": [
          "Index"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/definition/find": {
      "get": {
        "summary": "List Definition (find where) *",
        "description": "Find a list of **Definition** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Definition** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/definition"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/definition/find/{_id}": {
      "get": {
        "summary": "Get Definition (find one) *",
        "description": "Look up the **Definition** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-definition"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Definition** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Definition** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/definition/create": {
      "get": {
        "summary": "Create Definition *",
        "description": "Create a new **Definition** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "default": "object",
              "example": "object"
            }
          },
          {
            "in": "query",
            "name": "properties",
            "schema": {}
          },
          {
            "in": "query",
            "name": "metadata",
            "schema": {}
          },
          {
            "in": "query",
            "name": "teamId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Definition** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/definition/update/{_id}": {
      "get": {
        "summary": "Update Definition *",
        "description": "Update an existing **Definition** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-definition"
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "default": "object",
              "example": "object"
            }
          },
          {
            "in": "query",
            "name": "properties",
            "schema": {}
          },
          {
            "in": "query",
            "name": "metadata",
            "schema": {}
          },
          {
            "in": "query",
            "name": "teamId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Definition** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Definition** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/definition/destroy/{_id}": {
      "get": {
        "summary": "Delete Definition (destroy) *",
        "description": "Delete the **Definition** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-definition"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Definition** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Definition** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dictionary/find": {
      "get": {
        "summary": "List Dictionary (find where) *",
        "description": "Find a list of **Dictionary** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Dictionary** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dictionary"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dictionary/find/{_id}": {
      "get": {
        "summary": "Get Dictionary (find one) *",
        "description": "Look up the **Dictionary** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-dictionary"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Dictionary** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Dictionary** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dictionary/create": {
      "get": {
        "summary": "Create *",
        "description": "Create dictionary.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "property",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Dictionary** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dictionary/update/{_id}": {
      "get": {
        "summary": "Update Dictionary *",
        "description": "Update an existing **Dictionary** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-dictionary"
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "property",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Dictionary** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Dictionary** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dictionary/destroy/{_id}": {
      "get": {
        "summary": "Delete Dictionary (destroy) *",
        "description": "Delete the **Dictionary** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-dictionary"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Dictionary** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Dictionary** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page/find": {
      "get": {
        "summary": "List Page (find where) *",
        "description": "Find a list of **Page** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Page** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/page"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page/find/{_id}": {
      "get": {
        "summary": "Get Page (find one) *",
        "description": "Look up the **Page** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-page"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Page** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Page** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page/create": {
      "get": {
        "summary": "Create Page *",
        "description": "Create a new **Page** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "hideTitle",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "identifier",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "teamId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "addButton",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "addLink",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pathOption",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "backButton",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "component",
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "serviceUrl",
            "schema": {}
          },
          {
            "in": "query",
            "name": "isRedirect",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "redirectOption",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "redirectLink",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "hideSubmitButton",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "listBtn",
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "onInit",
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "customToastrMsg",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Page** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page/update/{_id}": {
      "get": {
        "summary": "Update Page *",
        "description": "Update an existing **Page** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-page"
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "hideTitle",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "teamId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "addButton",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "addLink",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pathOption",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "backButton",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "component",
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "serviceUrl",
            "schema": {}
          },
          {
            "in": "query",
            "name": "isRedirect",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "redirectOption",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "redirectLink",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "hideSubmitButton",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "listBtn",
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "onInit",
            "schema": {
              "type": "array",
              "items": {},
              "default": [],
              "example": []
            }
          },
          {
            "in": "query",
            "name": "customToastrMsg",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Page** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Page** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page/destroy/{_id}": {
      "get": {
        "summary": "Delete Page (destroy) *",
        "description": "Delete the **Page** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Page** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Page** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/path/find": {
      "get": {
        "summary": "List Path (find where) *",
        "description": "Find a list of **Path** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Path** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/path"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/path/find/{_id}": {
      "get": {
        "summary": "Get Path (find one) *",
        "description": "Look up the **Path** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-path"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Path** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Path** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/path/create": {
      "get": {
        "summary": "Create Path *",
        "description": "Create a new **Path** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "parameter",
            "schema": {},
            "required": true
          },
          {
            "in": "query",
            "name": "teamId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Path** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/path/update/{_id}": {
      "get": {
        "summary": "Update Path *",
        "description": "Update an existing **Path** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-path"
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parameter",
            "schema": {}
          },
          {
            "in": "query",
            "name": "teamId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Path** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Path** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/path/destroy/{_id}": {
      "get": {
        "summary": "Delete Path (destroy) *",
        "description": "Delete the **Path** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-path"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Path** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Path** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team/find": {
      "get": {
        "summary": "List Team (find where) *",
        "description": "Find a list of **Team** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Team** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team/find/{_id}": {
      "get": {
        "summary": "Get Team (find one) *",
        "description": "Look up the **Team** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Team** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Team** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team/create": {
      "get": {
        "summary": "Create Team *",
        "description": "Create a new **Team** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "uniqueItems": true
            },
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Team** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team/update/{_id}": {
      "get": {
        "summary": "Update Team *",
        "description": "Update an existing **Team** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team"
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Team** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Team** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team/destroy/{_id}": {
      "get": {
        "summary": "Delete Team (destroy) *",
        "description": "Delete the **Team** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Team** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Team** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/find": {
      "get": {
        "summary": "List User (find where) *",
        "description": "Find a list of **User** records that match the specified criteria.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **User** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/find/{_id}": {
      "get": {
        "summary": "Get User (find one) *",
        "description": "Look up the **User** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **User** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **User** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/create": {
      "get": {
        "summary": "Create User *",
        "description": "Create a new **User** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "fullName",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "uniqueItems": true
            },
            "required": true
          },
          {
            "in": "query",
            "name": "emailStatus",
            "schema": {
              "type": "string",
              "default": "unconfirmed",
              "enum": [
                "unconfirmed",
                "confirmed"
              ],
              "example": "unconfirmed"
            }
          },
          {
            "in": "query",
            "name": "emailProofToken",
            "schema": {
              "type": "string",
              "description": "This will be used in the account verification email"
            },
            "description": "This will be used in the account verification email"
          },
          {
            "in": "query",
            "name": "emailProofTokenExpiresAt",
            "schema": {
              "type": "number",
              "format": "double",
              "description": "time in milliseconds representing when the emailProofToken will expire"
            },
            "description": "time in milliseconds representing when the emailProofToken will expire"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "passwordResetToken",
            "schema": {
              "type": "string",
              "description": "A unique token used to verify the user's identity when recovering a password."
            },
            "description": "A unique token used to verify the user's identity when recovering a password."
          },
          {
            "in": "query",
            "name": "passwordResetTokenExpiresAt",
            "schema": {
              "type": "number",
              "format": "double",
              "description": "A timestamp representing the moment when this user's `passwordResetToken` will expire (or 0 if the user currently has no such token).",
              "example": 1508944074211
            },
            "description": "A timestamp representing the moment when this user's `passwordResetToken` will expire (or 0 if the user currently has no such token)."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **User** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/update/{_id}": {
      "get": {
        "summary": "Update User *",
        "description": "Update an existing **User** record.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user"
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "updatedAt",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "fullName",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "name": "emailStatus",
            "schema": {
              "type": "string",
              "default": "unconfirmed",
              "enum": [
                "unconfirmed",
                "confirmed"
              ],
              "example": "unconfirmed"
            }
          },
          {
            "in": "query",
            "name": "emailProofToken",
            "schema": {
              "type": "string",
              "description": "This will be used in the account verification email"
            },
            "description": "This will be used in the account verification email"
          },
          {
            "in": "query",
            "name": "emailProofTokenExpiresAt",
            "schema": {
              "type": "number",
              "format": "double",
              "description": "time in milliseconds representing when the emailProofToken will expire"
            },
            "description": "time in milliseconds representing when the emailProofToken will expire"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "passwordResetToken",
            "schema": {
              "type": "string",
              "description": "A unique token used to verify the user's identity when recovering a password."
            },
            "description": "A unique token used to verify the user's identity when recovering a password."
          },
          {
            "in": "query",
            "name": "passwordResetTokenExpiresAt",
            "schema": {
              "type": "number",
              "format": "double",
              "description": "A timestamp representing the moment when this user's `passwordResetToken` will expire (or 0 if the user currently has no such token).",
              "example": 1508944074211
            },
            "description": "A timestamp representing the moment when this user's `passwordResetToken` will expire (or 0 if the user currently has no such token)."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **User** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **User** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/destroy/{_id}": {
      "get": {
        "summary": "Delete User (destroy) *",
        "description": "Delete the **User** record with the specified ID.\n\n(\\*) Note that this is a [Sails blueprint shortcut route](https://sailsjs.com/documentation/concepts/blueprints/blueprint-routes#?shortcut-blueprint-routes) (recommended for **development-mode only**)",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **User** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **User** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/definition": {
      "get": {
        "summary": "List Definition (find where)",
        "description": "Find a list of **Definition** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Definition** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/definition"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create Definition",
        "description": "Create a new **Definition** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Definition** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Definition instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/definition"
              }
            }
          }
        }
      }
    },
    "/definition/{_id}": {
      "get": {
        "summary": "Get Definition (find one)",
        "description": "Look up the **Definition** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-definition"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,type,properties,metadata,teamId"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Definition** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Definition** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update Definition",
        "description": "Update an existing **Definition** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-definition"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Definition** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Definition** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Definition instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/definition-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Definition (destroy)",
        "description": "Delete the **Definition** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Definition"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-definition"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Definition** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/definition"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Definition** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dictionary": {
      "get": {
        "summary": "List Dictionary (find where)",
        "description": "Find a list of **Dictionary** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Dictionary** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dictionary"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create",
        "description": "Create dictionary.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Dictionary** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Dictionary instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dictionary"
              }
            }
          }
        }
      }
    },
    "/dictionary/{_id}": {
      "get": {
        "summary": "Get Dictionary (find one)",
        "description": "Look up the **Dictionary** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-dictionary"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,property,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Dictionary** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Dictionary** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update Dictionary",
        "description": "Update an existing **Dictionary** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-dictionary"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Dictionary** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Dictionary** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Dictionary instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dictionary-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Dictionary (destroy)",
        "description": "Delete the **Dictionary** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Dictionary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-dictionary"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Dictionary** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dictionary"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Dictionary** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page": {
      "get": {
        "summary": "List Page (find where)",
        "description": "Find a list of **Page** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Page** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/page"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create Page",
        "description": "Create a new **Page** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Page"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Page** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Page instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/page"
              }
            }
          }
        }
      }
    },
    "/page/{_id}": {
      "get": {
        "summary": "Get Page (find one)",
        "description": "Look up the **Page** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-page"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,title,hideTitle,identifier,teamId,addButton,addLink,pathOption,backButton,component,serviceUrl,isRedirect,redirectOption,redirectLink,hideSubmitButton,listBtn,onInit,customToastrMsg"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Page** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Page** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update Page",
        "description": "Update an existing **Page** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Page** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Page** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Page instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/page-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Page (destroy)",
        "description": "Delete the **Page** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Page"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Page** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Page** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/path": {
      "get": {
        "summary": "List Path (find where)",
        "description": "Find a list of **Path** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Path** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/path"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create Path",
        "description": "Create a new **Path** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Path"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Path** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Path instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/path"
              }
            }
          }
        }
      }
    },
    "/path/{_id}": {
      "get": {
        "summary": "Get Path (find one)",
        "description": "Look up the **Path** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-path"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,path,environment,parameter,teamId,description"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Path** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Path** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update Path",
        "description": "Update an existing **Path** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-path"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Path** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Path** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Path instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/path-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Path (destroy)",
        "description": "Delete the **Path** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Path"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-path"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Path** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/path"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Path** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/team": {
      "get": {
        "summary": "List Team (find where)",
        "description": "Find a list of **Team** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **Team** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create Team",
        "description": "Create a new **Team** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Team** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Team instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team"
              }
            }
          }
        }
      }
    },
    "/team/{_id}": {
      "get": {
        "summary": "Get Team (find one)",
        "description": "Look up the **Team** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,name,description,token"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **Team** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **Team** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update Team",
        "description": "Update an existing **Team** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **Team** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **Team** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Team instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Team (destroy)",
        "description": "Delete the **Team** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-team"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **Team** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **Team** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "List User (find where)",
        "description": "Find a list of **User** records that match the specified criteria.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-where",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-where"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AttributeFilterParam"
          },
          {
            "$ref": "#/components/parameters/WhereQueryParam"
          },
          {
            "$ref": "#/components/parameters/LimitQueryParam"
          },
          {
            "$ref": "#/components/parameters/SkipQueryParam"
          },
          {
            "$ref": "#/components/parameters/SortQueryParam"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a paged list of **User** records that match the specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create User",
        "description": "Create a new **User** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "User"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **User** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the User instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        }
      }
    },
    "/user/{_id}": {
      "get": {
        "summary": "Get User (find one)",
        "description": "Look up the **User** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/find-one",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/find-one"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user"
          },
          {
            "in": "query",
            "name": "select",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to include in the result, specified as a comma-delimited list. By default, all attributes are selected. Not valid for plural (“collection”) association attributes."
          },
          {
            "in": "query",
            "name": "omit",
            "required": false,
            "schema": {
              "type": "string",
              "example": "createdAt,updatedAt,id,fullName,email,emailStatus,emailProofToken,emailProofTokenExpiresAt,password,passwordResetToken,passwordResetTokenExpiresAt"
            },
            "description": "The attributes to exclude from the result, specified as a comma-delimited list. Cannot be used in conjuction with `select`. Not valid for plural (“collection”) association attributes."
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a single **User** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "Response denoting **User** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update User",
        "description": "Update an existing **User** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/update",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/update"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with the newly updated **User** record as a JSON dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Cannot update, **User** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the User instance to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user-without-required-constraint"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User (destroy)",
        "description": "Delete the **User** record with the specified ID.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/destroy",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/destroy"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelPKParam-user"
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the destroyed **User** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "Cannot destroy, **User** record with specified ID **NOT** found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}